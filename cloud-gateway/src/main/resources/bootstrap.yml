server:
  port: 9527

logging:
  level:
    com.alibaba.nacos.client.naming: error
  #    org.springframework.cloud.gateway: debug

spring:
  application:
    name: cloud-gateway
  devtools:
    restart:
      enabled: true
  profiles:
    active: dev
  cloud:
    nacos:
      config:
        server-addr: nacos.khaos.cosmoplat.com:80
        namespace: orw-prod
        file-extension: yml
      discovery:
        server-addr: nacos.khaos.cosmoplat.com:80
    gateway:
      discovery:
        locator:
          lowerCaseServiceId: true
          enabled: true
      routes:
        # 认证中心
        - id: cloud-auth
          uri: lb://cloud-auth
          predicates:
            - Path=/auth/**
          filters:
            # 验证码处理
            - CacheRequest
            - ImgCodeFilter
            - StripPrefix=1
        # 代码生成
        - id: cloud-gen
          uri: lb://cloud-gen
          predicates:
            - Path=/gen/**
          filters:
            - StripPrefix=1
        # act
        - id: cloud-activiti
          uri: lb://cloud-activiti
          predicates:
            - Path=/act/**,/static/**
          filters:
            - StripPrefix=1
        #system 模块
        - id: cloud-system
          uri: lb://cloud-system
          predicates:
            - Path=/system/**
          filters:
            - StripPrefix=1
            # 限流配置
            - name: RequestRateLimiter
              args:
                key-resolver: '#{@remoteAddrKeyResolver}'
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
              # 降级配置
            - name: SpecialHystrix
              args:
                id: SpecialHystrix
                fallbackUri: 'forward:/fallback'
                timeout:
                  #指定接口超时处理
                  test-hell: 6000
                  #本地导出78万数据用了510s
                  rawMaterialStock-exportRawMaterial: 600000
        #order 模块
        - id: cloud-order
          uri: lb://cloud-order
          predicates:
            - Path=/order/**
          filters:
            - StripPrefix=1
            # 限流配置
            - name: RequestRateLimiter
              args:
                key-resolver: '#{@remoteAddrKeyResolver}'
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
              # 降级配置
            - name: SpecialHystrix
              args:
                id: SpecialHystrix
                fallbackUri: 'forward:/fallback'
                timeout:
                  productionOrder-importProductOrder: 60000
                  productOrderDetail-export: 60000
                  demand-queryAndInsertDemandPRFromSap800Friday: 120000
                  demand-queryDemandPRFromSap800: 120000
                  demandOrderGather-gatherDemandOrderFriday: 60000
                  demandOrderGather-gatherDemandOrderMonday: 60000
                  demandOrderGatherEdit-importExcel: 60000
                  oms2weeksDemandOrderEdit-importExcel: 100000
                  demandOrderGatherEdit-toSAP: 60000
                  oms2weeksDemandOrderEdit-toSAP: 60000
                  actOmsOrderMaterialOut-save: 30000
        #settle 模块
        - id: cloud-settle
          uri: lb://cloud-settle
          predicates:
            - Path=/settle/**
          filters:
            - StripPrefix=1
            # 限流配置
            - name: RequestRateLimiter
              args:
                key-resolver: '#{@remoteAddrKeyResolver}'
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
              # 降级配置
            - name: Hystrix
              args:
                name: fallbackcmd
                fallbackUri: 'forward:/fallback'
ribbon:
  OkToRetryOnAllOperations: false #对所有操作请求都进行重试,默认false
  ReadTimeout: 5000   #负载均衡超时时间，默认值5000
  ConnectTimeout: 2000 #ribbon请求连接的超时时间，默认值2000
  MaxAutoRetries: 0     #对当前实例的重试次数，默认0
  MaxAutoRetriesNextServer: 1 #对切换实例的重试次数，默认1
hystrix:
  command:
    default:  #default全局有效，service id指定应用有效
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 10000 #断路器超时时间，默认1000ms
