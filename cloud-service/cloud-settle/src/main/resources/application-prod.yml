# 数据源配置
spring:
  redis:
    database: 1
    password: Cos8_Order    # 密码（默认为空）
    timeout: 6000ms  # 连接超时时长（毫秒）
    sentinel:
      master: cosorder
      nodes:
        - 10.202.89.21:16379
        - 10.202.89.22:16379
        - 10.202.89.23:16379
    lettuce:
      pool:
        max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1      # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 10      # 连接池中的最大空闲连接
        min-idle: 5       # 连接池中的最小空闲连接
  cloud:
    nacos:
      discovery:
        namespace: orw-prod
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    druid:
      # 主库数据源
      master:
        url: jdbc:mysql://10.202.89.21:5730/orw?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
        username: appadmin
        password: OI%TPkmL
      # 从库数据源
      slave:
        #从数据源开关/默认关闭
        enabled: false
        url: jdbc:mysql://localhost:3306/cloud_read?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
        username: root
        password: root
      # 初始连接数
      initialSize: 5
      # 最小连接池数量
      minIdle: 10
      # 最大连接池数量
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      # 配置一个连接在池中最大生存的时间，单位是毫秒
      maxEvictableIdleTimeMillis: 900000
      # 配置检测连接是否有效
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      webStatFilter:
        enabled: true
      statViewServlet:
        enabled: true
        # 设置白名单，不填则允许所有访问
        allow:
        url-pattern: /monitor/druid/*
      filter:
        stat:
          enabled: true
          # 慢SQL记录
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: true
        wall:
          config:
            multi-statement-allow: true
#seata命名空间
seata:
  registry:
    nacos:
      namespace: ${spring.cloud.nacos.discovery.namespace}
sap:
  client601:
    ashost: 10.202.84.25
    sysnr: 30
    client: 600
    user: KASINT05
    passwd: Haier@123
    lang: ZH
webService:
  baseMultiItemClaim:
    urlClaim: http://10.133.28.51:8001/gems/services/baseClaim/ifBaseClaim_Srv?wsdl
    namespaceURL: http://gems.haier.com/IfBaseClaim_Srv
    localPart: IfBaseClaim_Srv
    dictType: company_cost_relation
  qryPaysSoap:
    urlClaim: http://10.133.28.51:8080/fm/services/QryPays?wsdl
    namespaceURL: http://10.133.28.51:8080/fm/services/QryPays
    localPart: ErpPayoutReceiveServiceService
